[{"name":"abstract class NonLinear(val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.NonLinear","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/index.html","searchKeys":["NonLinear","abstract class NonLinear(val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.NonLinear"]},{"name":"abstract class PolynomialEquation(val coefficients: List<Complex>)","description":"com.albertomiola.equations.polynomial.PolynomialEquation","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/index.html","searchKeys":["PolynomialEquation","abstract class PolynomialEquation(val coefficients: List<Complex>)","com.albertomiola.equations.polynomial.PolynomialEquation"]},{"name":"abstract class Rational : Comparable<Rational> ","description":"com.albertomiola.equations.utils.Rational","location":"equations/com.albertomiola.equations.utils/-rational/index.html","searchKeys":["Rational","abstract class Rational : Comparable<Rational> ","com.albertomiola.equations.utils.Rational"]},{"name":"abstract fun derivative(): PolynomialEquation","description":"com.albertomiola.equations.polynomial.PolynomialEquation.derivative","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/derivative.html","searchKeys":["derivative","abstract fun derivative(): PolynomialEquation","com.albertomiola.equations.polynomial.PolynomialEquation.derivative"]},{"name":"abstract fun discriminant(): Complex","description":"com.albertomiola.equations.polynomial.PolynomialEquation.discriminant","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/discriminant.html","searchKeys":["discriminant","abstract fun discriminant(): Complex","com.albertomiola.equations.polynomial.PolynomialEquation.discriminant"]},{"name":"abstract fun negate(): Rational","description":"com.albertomiola.equations.utils.Rational.negate","location":"equations/com.albertomiola.equations.utils/-rational/negate.html","searchKeys":["negate","abstract fun negate(): Rational","com.albertomiola.equations.utils.Rational.negate"]},{"name":"abstract fun reduce(): Rational","description":"com.albertomiola.equations.utils.Rational.reduce","location":"equations/com.albertomiola.equations.utils/-rational/reduce.html","searchKeys":["reduce","abstract fun reduce(): Rational","com.albertomiola.equations.utils.Rational.reduce"]},{"name":"abstract fun roots(): List<Complex>","description":"com.albertomiola.equations.polynomial.PolynomialEquation.roots","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/roots.html","searchKeys":["roots","abstract fun roots(): List<Complex>","com.albertomiola.equations.polynomial.PolynomialEquation.roots"]},{"name":"abstract fun solve(): NonLinearResult","description":"com.albertomiola.equations.nonlinear.NonLinear.solve","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/solve.html","searchKeys":["solve","abstract fun solve(): NonLinearResult","com.albertomiola.equations.nonlinear.NonLinear.solve"]},{"name":"abstract fun toDouble(): Double","description":"com.albertomiola.equations.utils.Rational.toDouble","location":"equations/com.albertomiola.equations.utils/-rational/to-double.html","searchKeys":["toDouble","abstract fun toDouble(): Double","com.albertomiola.equations.utils.Rational.toDouble"]},{"name":"abstract val degree: Double","description":"com.albertomiola.equations.polynomial.PolynomialEquation.degree","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/degree.html","searchKeys":["degree","abstract val degree: Double","com.albertomiola.equations.polynomial.PolynomialEquation.degree"]},{"name":"abstract val denominator: Int","description":"com.albertomiola.equations.utils.Rational.denominator","location":"equations/com.albertomiola.equations.utils/-rational/denominator.html","searchKeys":["denominator","abstract val denominator: Int","com.albertomiola.equations.utils.Rational.denominator"]},{"name":"abstract val isNegative: Boolean","description":"com.albertomiola.equations.utils.Rational.isNegative","location":"equations/com.albertomiola.equations.utils/-rational/is-negative.html","searchKeys":["isNegative","abstract val isNegative: Boolean","com.albertomiola.equations.utils.Rational.isNegative"]},{"name":"abstract val isWhole: Boolean","description":"com.albertomiola.equations.utils.Rational.isWhole","location":"equations/com.albertomiola.equations.utils/-rational/is-whole.html","searchKeys":["isWhole","abstract val isWhole: Boolean","com.albertomiola.equations.utils.Rational.isWhole"]},{"name":"abstract val numerator: Int","description":"com.albertomiola.equations.utils.Rational.numerator","location":"equations/com.albertomiola.equations.utils/-rational/numerator.html","searchKeys":["numerator","abstract val numerator: Int","com.albertomiola.equations.utils.Rational.numerator"]},{"name":"class Bisection(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","description":"com.albertomiola.equations.nonlinear.types.Bisection","location":"equations/com.albertomiola.equations.nonlinear.types/-bisection/index.html","searchKeys":["Bisection","class Bisection(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","com.albertomiola.equations.nonlinear.types.Bisection"]},{"name":"class Brent(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","description":"com.albertomiola.equations.nonlinear.types.Brent","location":"equations/com.albertomiola.equations.nonlinear.types/-brent/index.html","searchKeys":["Brent","class Brent(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","com.albertomiola.equations.nonlinear.types.Brent"]},{"name":"class Chords(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","description":"com.albertomiola.equations.nonlinear.types.Chords","location":"equations/com.albertomiola.equations.nonlinear.types/-chords/index.html","searchKeys":["Chords","class Chords(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","com.albertomiola.equations.nonlinear.types.Chords"]},{"name":"class Complex(val real: Double, val imaginary: Double) : Comparable<Complex> ","description":"com.albertomiola.equations.utils.complex.Complex","location":"equations/com.albertomiola.equations.utils.complex/-complex/index.html","searchKeys":["Complex","class Complex(val real: Double, val imaginary: Double) : Comparable<Complex> ","com.albertomiola.equations.utils.complex.Complex"]},{"name":"class ComplexException(errorMessage: String) : Exception","description":"com.albertomiola.equations.utils.exceptions.ComplexException","location":"equations/com.albertomiola.equations.utils.exceptions/-complex-exception/index.html","searchKeys":["ComplexException","class ComplexException(errorMessage: String) : Exception","com.albertomiola.equations.utils.exceptions.ComplexException"]},{"name":"class Constant(val a: Complex = Complex()) : PolynomialEquation","description":"com.albertomiola.equations.polynomial.types.Constant","location":"equations/com.albertomiola.equations.polynomial.types/-constant/index.html","searchKeys":["Constant","class Constant(val a: Complex = Complex()) : PolynomialEquation","com.albertomiola.equations.polynomial.types.Constant"]},{"name":"class Cubic(val a: Complex, val b: Complex = Complex(), val c: Complex = Complex(), val d: Complex = Complex()) : PolynomialEquation","description":"com.albertomiola.equations.polynomial.types.Cubic","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/index.html","searchKeys":["Cubic","class Cubic(val a: Complex, val b: Complex = Complex(), val c: Complex = Complex(), val d: Complex = Complex()) : PolynomialEquation","com.albertomiola.equations.polynomial.types.Cubic"]},{"name":"class DurandKerner(val coefficients: List<Complex>, val initialGuess: List<Complex> = listOf(), val precision: Double = 1.0E-10, val maxSteps: Int = 30) : PolynomialEquation","description":"com.albertomiola.equations.polynomial.types.DurandKerner","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/index.html","searchKeys":["DurandKerner","class DurandKerner(val coefficients: List<Complex>, val initialGuess: List<Complex> = listOf(), val precision: Double = 1.0E-10, val maxSteps: Int = 30) : PolynomialEquation","com.albertomiola.equations.polynomial.types.DurandKerner"]},{"name":"class Fraction(num: Int, den: Int = 1) : Rational","description":"com.albertomiola.equations.utils.fraction.Fraction","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/index.html","searchKeys":["Fraction","class Fraction(num: Int, den: Int = 1) : Rational","com.albertomiola.equations.utils.fraction.Fraction"]},{"name":"class FractionException(errorMessage: String) : Exception","description":"com.albertomiola.equations.utils.exceptions.FractionException","location":"equations/com.albertomiola.equations.utils.exceptions/-fraction-exception/index.html","searchKeys":["FractionException","class FractionException(errorMessage: String) : Exception","com.albertomiola.equations.utils.exceptions.FractionException"]},{"name":"class Linear(val a: Complex, val b: Complex) : PolynomialEquation","description":"com.albertomiola.equations.polynomial.types.Linear","location":"equations/com.albertomiola.equations.polynomial.types/-linear/index.html","searchKeys":["Linear","class Linear(val a: Complex, val b: Complex) : PolynomialEquation","com.albertomiola.equations.polynomial.types.Linear"]},{"name":"class Newton(val x0: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","description":"com.albertomiola.equations.nonlinear.types.Newton","location":"equations/com.albertomiola.equations.nonlinear.types/-newton/index.html","searchKeys":["Newton","class Newton(val x0: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","com.albertomiola.equations.nonlinear.types.Newton"]},{"name":"class NonLinearException(errorMessage: String) : Exception","description":"com.albertomiola.equations.utils.exceptions.NonLinearException","location":"equations/com.albertomiola.equations.utils.exceptions/-non-linear-exception/index.html","searchKeys":["NonLinearException","class NonLinearException(errorMessage: String) : Exception","com.albertomiola.equations.utils.exceptions.NonLinearException"]},{"name":"class PolyLongDivisionException(message: String) : Exception","description":"com.albertomiola.equations.utils.exceptions.PolyLongDivisionException","location":"equations/com.albertomiola.equations.utils.exceptions/-poly-long-division-exception/index.html","searchKeys":["PolyLongDivisionException","class PolyLongDivisionException(message: String) : Exception","com.albertomiola.equations.utils.exceptions.PolyLongDivisionException"]},{"name":"class PolynomialException(errorMessage: String) : Exception","description":"com.albertomiola.equations.utils.exceptions.PolynomialException","location":"equations/com.albertomiola.equations.utils.exceptions/-polynomial-exception/index.html","searchKeys":["PolynomialException","class PolynomialException(errorMessage: String) : Exception","com.albertomiola.equations.utils.exceptions.PolynomialException"]},{"name":"class Quadratic(val a: Complex, val b: Complex = Complex(), val c: Complex = Complex()) : PolynomialEquation","description":"com.albertomiola.equations.polynomial.types.Quadratic","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/index.html","searchKeys":["Quadratic","class Quadratic(val a: Complex, val b: Complex = Complex(), val c: Complex = Complex()) : PolynomialEquation","com.albertomiola.equations.polynomial.types.Quadratic"]},{"name":"class Quartic(val a: Complex, val b: Complex, val c: Complex, val d: Complex, val e: Complex) : PolynomialEquation","description":"com.albertomiola.equations.polynomial.types.Quartic","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/index.html","searchKeys":["Quartic","class Quartic(val a: Complex, val b: Complex, val c: Complex, val d: Complex, val e: Complex) : PolynomialEquation","com.albertomiola.equations.polynomial.types.Quartic"]},{"name":"class RegulaFalsi(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","description":"com.albertomiola.equations.nonlinear.types.RegulaFalsi","location":"equations/com.albertomiola.equations.nonlinear.types/-regula-falsi/index.html","searchKeys":["RegulaFalsi","class RegulaFalsi(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","com.albertomiola.equations.nonlinear.types.RegulaFalsi"]},{"name":"class Riddler(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","description":"com.albertomiola.equations.nonlinear.types.Riddler","location":"equations/com.albertomiola.equations.nonlinear.types/-riddler/index.html","searchKeys":["Riddler","class Riddler(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","com.albertomiola.equations.nonlinear.types.Riddler"]},{"name":"class Secant(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","description":"com.albertomiola.equations.nonlinear.types.Secant","location":"equations/com.albertomiola.equations.nonlinear.types/-secant/index.html","searchKeys":["Secant","class Secant(val a: Double, val b: Double, val function: String, val tolerance: Double = 1.0E-15, val maxSteps: Int = 20) : NonLinear","com.albertomiola.equations.nonlinear.types.Secant"]},{"name":"constructor()","description":"com.albertomiola.equations.utils.Rational.Rational","location":"equations/com.albertomiola.equations.utils/-rational/-rational.html","searchKeys":["Rational","constructor()","com.albertomiola.equations.utils.Rational.Rational"]},{"name":"constructor()","description":"com.albertomiola.equations.utils.complex.Complex.Complex","location":"equations/com.albertomiola.equations.utils.complex/-complex/-complex.html","searchKeys":["Complex","constructor()","com.albertomiola.equations.utils.complex.Complex.Complex"]},{"name":"constructor(a: Complex = Complex())","description":"com.albertomiola.equations.polynomial.types.Constant.Constant","location":"equations/com.albertomiola.equations.polynomial.types/-constant/-constant.html","searchKeys":["Constant","constructor(a: Complex = Complex())","com.albertomiola.equations.polynomial.types.Constant.Constant"]},{"name":"constructor(a: Complex, b: Complex = Complex(), c: Complex = Complex())","description":"com.albertomiola.equations.polynomial.types.Quadratic.Quadratic","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/-quadratic.html","searchKeys":["Quadratic","constructor(a: Complex, b: Complex = Complex(), c: Complex = Complex())","com.albertomiola.equations.polynomial.types.Quadratic.Quadratic"]},{"name":"constructor(a: Complex, b: Complex = Complex(), c: Complex = Complex(), d: Complex = Complex())","description":"com.albertomiola.equations.polynomial.types.Cubic.Cubic","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/-cubic.html","searchKeys":["Cubic","constructor(a: Complex, b: Complex = Complex(), c: Complex = Complex(), d: Complex = Complex())","com.albertomiola.equations.polynomial.types.Cubic.Cubic"]},{"name":"constructor(a: Complex, b: Complex)","description":"com.albertomiola.equations.polynomial.types.Linear.Linear","location":"equations/com.albertomiola.equations.polynomial.types/-linear/-linear.html","searchKeys":["Linear","constructor(a: Complex, b: Complex)","com.albertomiola.equations.polynomial.types.Linear.Linear"]},{"name":"constructor(a: Complex, b: Complex, c: Complex, d: Complex, e: Complex)","description":"com.albertomiola.equations.polynomial.types.Quartic.Quartic","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/-quartic.html","searchKeys":["Quartic","constructor(a: Complex, b: Complex, c: Complex, d: Complex, e: Complex)","com.albertomiola.equations.polynomial.types.Quartic.Quartic"]},{"name":"constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.types.Bisection.Bisection","location":"equations/com.albertomiola.equations.nonlinear.types/-bisection/-bisection.html","searchKeys":["Bisection","constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.types.Bisection.Bisection"]},{"name":"constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.types.Brent.Brent","location":"equations/com.albertomiola.equations.nonlinear.types/-brent/-brent.html","searchKeys":["Brent","constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.types.Brent.Brent"]},{"name":"constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.types.Chords.Chords","location":"equations/com.albertomiola.equations.nonlinear.types/-chords/-chords.html","searchKeys":["Chords","constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.types.Chords.Chords"]},{"name":"constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.types.RegulaFalsi.RegulaFalsi","location":"equations/com.albertomiola.equations.nonlinear.types/-regula-falsi/-regula-falsi.html","searchKeys":["RegulaFalsi","constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.types.RegulaFalsi.RegulaFalsi"]},{"name":"constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.types.Riddler.Riddler","location":"equations/com.albertomiola.equations.nonlinear.types/-riddler/-riddler.html","searchKeys":["Riddler","constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.types.Riddler.Riddler"]},{"name":"constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.types.Secant.Secant","location":"equations/com.albertomiola.equations.nonlinear.types/-secant/-secant.html","searchKeys":["Secant","constructor(a: Double, b: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.types.Secant.Secant"]},{"name":"constructor(coefficients: List<Complex>)","description":"com.albertomiola.equations.polynomial.PolynomialEquation.PolynomialEquation","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/-polynomial-equation.html","searchKeys":["PolynomialEquation","constructor(coefficients: List<Complex>)","com.albertomiola.equations.polynomial.PolynomialEquation.PolynomialEquation"]},{"name":"constructor(coefficients: List<Complex>, initialGuess: List<Complex> = listOf(), precision: Double = 1.0E-10, maxSteps: Int = 30)","description":"com.albertomiola.equations.polynomial.types.DurandKerner.DurandKerner","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/-durand-kerner.html","searchKeys":["DurandKerner","constructor(coefficients: List<Complex>, initialGuess: List<Complex> = listOf(), precision: Double = 1.0E-10, maxSteps: Int = 30)","com.albertomiola.equations.polynomial.types.DurandKerner.DurandKerner"]},{"name":"constructor(errorMessage: String)","description":"com.albertomiola.equations.utils.exceptions.ComplexException.ComplexException","location":"equations/com.albertomiola.equations.utils.exceptions/-complex-exception/-complex-exception.html","searchKeys":["ComplexException","constructor(errorMessage: String)","com.albertomiola.equations.utils.exceptions.ComplexException.ComplexException"]},{"name":"constructor(errorMessage: String)","description":"com.albertomiola.equations.utils.exceptions.FractionException.FractionException","location":"equations/com.albertomiola.equations.utils.exceptions/-fraction-exception/-fraction-exception.html","searchKeys":["FractionException","constructor(errorMessage: String)","com.albertomiola.equations.utils.exceptions.FractionException.FractionException"]},{"name":"constructor(errorMessage: String)","description":"com.albertomiola.equations.utils.exceptions.NonLinearException.NonLinearException","location":"equations/com.albertomiola.equations.utils.exceptions/-non-linear-exception/-non-linear-exception.html","searchKeys":["NonLinearException","constructor(errorMessage: String)","com.albertomiola.equations.utils.exceptions.NonLinearException.NonLinearException"]},{"name":"constructor(errorMessage: String)","description":"com.albertomiola.equations.utils.exceptions.PolynomialException.PolynomialException","location":"equations/com.albertomiola.equations.utils.exceptions/-polynomial-exception/-polynomial-exception.html","searchKeys":["PolynomialException","constructor(errorMessage: String)","com.albertomiola.equations.utils.exceptions.PolynomialException.PolynomialException"]},{"name":"constructor(function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.NonLinear.NonLinear","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/-non-linear.html","searchKeys":["NonLinear","constructor(function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.NonLinear.NonLinear"]},{"name":"constructor(guesses: List<Double>, convergence: Double, efficiency: Double)","description":"com.albertomiola.equations.nonlinear.utils.NonLinearResult.NonLinearResult","location":"equations/com.albertomiola.equations.nonlinear.utils/-non-linear-result/-non-linear-result.html","searchKeys":["NonLinearResult","constructor(guesses: List<Double>, convergence: Double, efficiency: Double)","com.albertomiola.equations.nonlinear.utils.NonLinearResult.NonLinearResult"]},{"name":"constructor(message: String)","description":"com.albertomiola.equations.utils.exceptions.PolyLongDivisionException.PolyLongDivisionException","location":"equations/com.albertomiola.equations.utils.exceptions/-poly-long-division-exception/-poly-long-division-exception.html","searchKeys":["PolyLongDivisionException","constructor(message: String)","com.albertomiola.equations.utils.exceptions.PolyLongDivisionException.PolyLongDivisionException"]},{"name":"constructor(num: Int, den: Int = 1)","description":"com.albertomiola.equations.utils.fraction.Fraction.Fraction","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/-fraction.html","searchKeys":["Fraction","constructor(num: Int, den: Int = 1)","com.albertomiola.equations.utils.fraction.Fraction.Fraction"]},{"name":"constructor(polyNumerator: PolynomialEquation, polyDenominator: PolynomialEquation)","description":"com.albertomiola.equations.polynomial.utils.PolynomialLongDivision.PolynomialLongDivision","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-long-division/-polynomial-long-division.html","searchKeys":["PolynomialLongDivision","constructor(polyNumerator: PolynomialEquation, polyDenominator: PolynomialEquation)","com.albertomiola.equations.polynomial.utils.PolynomialLongDivision.PolynomialLongDivision"]},{"name":"constructor(polynomial: PolynomialEquation)","description":"com.albertomiola.equations.polynomial.utils.SylvesterMatrix.SylvesterMatrix","location":"equations/com.albertomiola.equations.polynomial.utils/-sylvester-matrix/-sylvester-matrix.html","searchKeys":["SylvesterMatrix","constructor(polynomial: PolynomialEquation)","com.albertomiola.equations.polynomial.utils.SylvesterMatrix.SylvesterMatrix"]},{"name":"constructor(quotient: PolynomialEquation, remainder: PolynomialEquation)","description":"com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult.PolynomialDivisionResult","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-division-result/-polynomial-division-result.html","searchKeys":["PolynomialDivisionResult","constructor(quotient: PolynomialEquation, remainder: PolynomialEquation)","com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult.PolynomialDivisionResult"]},{"name":"constructor(r: Double, phiRadians: Double, phiDegrees: Double)","description":"com.albertomiola.equations.utils.complex.PolarComplex.PolarComplex","location":"equations/com.albertomiola.equations.utils.complex/-polar-complex/-polar-complex.html","searchKeys":["PolarComplex","constructor(r: Double, phiRadians: Double, phiDegrees: Double)","com.albertomiola.equations.utils.complex.PolarComplex.PolarComplex"]},{"name":"constructor(real: Double, imaginary: Double)","description":"com.albertomiola.equations.utils.complex.Complex.Complex","location":"equations/com.albertomiola.equations.utils.complex/-complex/-complex.html","searchKeys":["Complex","constructor(real: Double, imaginary: Double)","com.albertomiola.equations.utils.complex.Complex.Complex"]},{"name":"constructor(realPart: Double)","description":"com.albertomiola.equations.utils.complex.Complex.Complex","location":"equations/com.albertomiola.equations.utils.complex/-complex/-complex.html","searchKeys":["Complex","constructor(realPart: Double)","com.albertomiola.equations.utils.complex.Complex.Complex"]},{"name":"constructor(realPart: Int)","description":"com.albertomiola.equations.utils.complex.Complex.Complex","location":"equations/com.albertomiola.equations.utils.complex/-complex/-complex.html","searchKeys":["Complex","constructor(realPart: Int)","com.albertomiola.equations.utils.complex.Complex.Complex"]},{"name":"constructor(realPart: Int, complexPart: Int)","description":"com.albertomiola.equations.utils.complex.Complex.Complex","location":"equations/com.albertomiola.equations.utils.complex/-complex/-complex.html","searchKeys":["Complex","constructor(realPart: Int, complexPart: Int)","com.albertomiola.equations.utils.complex.Complex.Complex"]},{"name":"constructor(x0: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","description":"com.albertomiola.equations.nonlinear.types.Newton.Newton","location":"equations/com.albertomiola.equations.nonlinear.types/-newton/-newton.html","searchKeys":["Newton","constructor(x0: Double, function: String, tolerance: Double = 1.0E-15, maxSteps: Int = 20)","com.albertomiola.equations.nonlinear.types.Newton.Newton"]},{"name":"data class NonLinearResult(val guesses: List<Double>, val convergence: Double, val efficiency: Double)","description":"com.albertomiola.equations.nonlinear.utils.NonLinearResult","location":"equations/com.albertomiola.equations.nonlinear.utils/-non-linear-result/index.html","searchKeys":["NonLinearResult","data class NonLinearResult(val guesses: List<Double>, val convergence: Double, val efficiency: Double)","com.albertomiola.equations.nonlinear.utils.NonLinearResult"]},{"name":"data class PolarComplex(val r: Double, val phiRadians: Double, val phiDegrees: Double)","description":"com.albertomiola.equations.utils.complex.PolarComplex","location":"equations/com.albertomiola.equations.utils.complex/-polar-complex/index.html","searchKeys":["PolarComplex","data class PolarComplex(val r: Double, val phiRadians: Double, val phiDegrees: Double)","com.albertomiola.equations.utils.complex.PolarComplex"]},{"name":"data class PolynomialDivisionResult(var quotient: PolynomialEquation, val remainder: PolynomialEquation)","description":"com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-division-result/index.html","searchKeys":["PolynomialDivisionResult","data class PolynomialDivisionResult(var quotient: PolynomialEquation, val remainder: PolynomialEquation)","com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult"]},{"name":"data class PolynomialLongDivision(var polyNumerator: PolynomialEquation, val polyDenominator: PolynomialEquation)","description":"com.albertomiola.equations.polynomial.utils.PolynomialLongDivision","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-long-division/index.html","searchKeys":["PolynomialLongDivision","data class PolynomialLongDivision(var polyNumerator: PolynomialEquation, val polyDenominator: PolynomialEquation)","com.albertomiola.equations.polynomial.utils.PolynomialLongDivision"]},{"name":"data class SylvesterMatrix(val polynomial: PolynomialEquation)","description":"com.albertomiola.equations.polynomial.utils.SylvesterMatrix","location":"equations/com.albertomiola.equations.polynomial.utils/-sylvester-matrix/index.html","searchKeys":["SylvesterMatrix","data class SylvesterMatrix(val polynomial: PolynomialEquation)","com.albertomiola.equations.polynomial.utils.SylvesterMatrix"]},{"name":"fun Double.toFraction(): Fraction","description":"com.albertomiola.equations.utils.fraction.toFraction","location":"equations/com.albertomiola.equations.utils.fraction/to-fraction.html","searchKeys":["toFraction","fun Double.toFraction(): Fraction","com.albertomiola.equations.utils.fraction.toFraction"]},{"name":"fun Int.toFraction(): Fraction","description":"com.albertomiola.equations.utils.fraction.toFraction","location":"equations/com.albertomiola.equations.utils.fraction/to-fraction.html","searchKeys":["toFraction","fun Int.toFraction(): Fraction","com.albertomiola.equations.utils.fraction.toFraction"]},{"name":"fun String.toFraction(): Fraction","description":"com.albertomiola.equations.utils.fraction.toFraction","location":"equations/com.albertomiola.equations.utils.fraction/to-fraction.html","searchKeys":["toFraction","fun String.toFraction(): Fraction","com.albertomiola.equations.utils.fraction.toFraction"]},{"name":"fun abs(): Double","description":"com.albertomiola.equations.utils.complex.Complex.abs","location":"equations/com.albertomiola.equations.utils.complex/-complex/abs.html","searchKeys":["abs","fun abs(): Double","com.albertomiola.equations.utils.complex.Complex.abs"]},{"name":"fun coefficient(degree: Int): Complex?","description":"com.albertomiola.equations.polynomial.PolynomialEquation.coefficient","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/coefficient.html","searchKeys":["coefficient","fun coefficient(degree: Int): Complex?","com.albertomiola.equations.polynomial.PolynomialEquation.coefficient"]},{"name":"fun conjugate(): Complex","description":"com.albertomiola.equations.utils.complex.Complex.conjugate","location":"equations/com.albertomiola.equations.utils.complex/-complex/conjugate.html","searchKeys":["conjugate","fun conjugate(): Complex","com.albertomiola.equations.utils.complex.Complex.conjugate"]},{"name":"fun convergence(guesses: List<Double>): Double","description":"com.albertomiola.equations.nonlinear.NonLinear.convergence","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/convergence.html","searchKeys":["convergence","fun convergence(guesses: List<Double>): Double","com.albertomiola.equations.nonlinear.NonLinear.convergence"]},{"name":"fun copy(a: Complex? = null): Constant","description":"com.albertomiola.equations.polynomial.types.Constant.copy","location":"equations/com.albertomiola.equations.polynomial.types/-constant/copy.html","searchKeys":["copy","fun copy(a: Complex? = null): Constant","com.albertomiola.equations.polynomial.types.Constant.copy"]},{"name":"fun copy(a: Complex? = null, b: Complex? = null, c: Complex? = null, d: Complex? = null): Cubic","description":"com.albertomiola.equations.polynomial.types.Cubic.copy","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/copy.html","searchKeys":["copy","fun copy(a: Complex? = null, b: Complex? = null, c: Complex? = null, d: Complex? = null): Cubic","com.albertomiola.equations.polynomial.types.Cubic.copy"]},{"name":"fun copy(a: Complex?, b: Complex?): Linear","description":"com.albertomiola.equations.polynomial.types.Linear.copy","location":"equations/com.albertomiola.equations.polynomial.types/-linear/copy.html","searchKeys":["copy","fun copy(a: Complex?, b: Complex?): Linear","com.albertomiola.equations.polynomial.types.Linear.copy"]},{"name":"fun copy(a: Complex?, b: Complex?, c: Complex?): Quadratic","description":"com.albertomiola.equations.polynomial.types.Quadratic.copy","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/copy.html","searchKeys":["copy","fun copy(a: Complex?, b: Complex?, c: Complex?): Quadratic","com.albertomiola.equations.polynomial.types.Quadratic.copy"]},{"name":"fun copy(numerator: Int? = null, denominator: Int? = null): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.copy","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/copy.html","searchKeys":["copy","fun copy(numerator: Int? = null, denominator: Int? = null): Fraction","com.albertomiola.equations.utils.fraction.Fraction.copy"]},{"name":"fun copy(real: Double? = null, imaginary: Double? = null): Complex","description":"com.albertomiola.equations.utils.complex.Complex.copy","location":"equations/com.albertomiola.equations.utils.complex/-complex/copy.html","searchKeys":["copy","fun copy(real: Double? = null, imaginary: Double? = null): Complex","com.albertomiola.equations.utils.complex.Complex.copy"]},{"name":"fun createFromComplexList(coefficients: List<Complex>): PolynomialEquation","description":"com.albertomiola.equations.polynomial.PolynomialEquation.Factory.createFromComplexList","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/-factory/create-from-complex-list.html","searchKeys":["createFromComplexList","fun createFromComplexList(coefficients: List<Complex>): PolynomialEquation","com.albertomiola.equations.polynomial.PolynomialEquation.Factory.createFromComplexList"]},{"name":"fun createFromDouble(value: Double, precision: Double = 1.0E-12): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.Factory.createFromDouble","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/-factory/create-from-double.html","searchKeys":["createFromDouble","fun createFromDouble(value: Double, precision: Double = 1.0E-12): Fraction","com.albertomiola.equations.utils.fraction.Fraction.Factory.createFromDouble"]},{"name":"fun createFromDoubleList(coefficients: List<Double>): PolynomialEquation","description":"com.albertomiola.equations.polynomial.PolynomialEquation.createFromDoubleList","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/create-from-double-list.html","searchKeys":["createFromDoubleList","fun createFromDoubleList(coefficients: List<Double>): PolynomialEquation","com.albertomiola.equations.polynomial.PolynomialEquation.createFromDoubleList"]},{"name":"fun createFromFraction(real: Fraction, imaginary: Fraction): Complex","description":"com.albertomiola.equations.utils.complex.Complex.Factory.createFromFraction","location":"equations/com.albertomiola.equations.utils.complex/-complex/-factory/create-from-fraction.html","searchKeys":["createFromFraction","fun createFromFraction(real: Fraction, imaginary: Fraction): Complex","com.albertomiola.equations.utils.complex.Complex.Factory.createFromFraction"]},{"name":"fun createFromPolarCoordinates(r: Double, theta: Double, angleInRadians: Boolean = true): Complex","description":"com.albertomiola.equations.utils.complex.Complex.Factory.createFromPolarCoordinates","location":"equations/com.albertomiola.equations.utils.complex/-complex/-factory/create-from-polar-coordinates.html","searchKeys":["createFromPolarCoordinates","fun createFromPolarCoordinates(r: Double, theta: Double, angleInRadians: Boolean = true): Complex","com.albertomiola.equations.utils.complex.Complex.Factory.createFromPolarCoordinates"]},{"name":"fun createFromString(value: String): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.Factory.createFromString","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/-factory/create-from-string.html","searchKeys":["createFromString","fun createFromString(value: String): Fraction","com.albertomiola.equations.utils.fraction.Fraction.Factory.createFromString"]},{"name":"fun divide(): PolynomialDivisionResult","description":"com.albertomiola.equations.polynomial.utils.PolynomialLongDivision.divide","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-long-division/divide.html","searchKeys":["divide","fun divide(): PolynomialDivisionResult","com.albertomiola.equations.polynomial.utils.PolynomialLongDivision.divide"]},{"name":"fun efficiency(guesses: List<Double>, steps: Int): Double","description":"com.albertomiola.equations.nonlinear.NonLinear.efficiency","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/efficiency.html","searchKeys":["efficiency","fun efficiency(guesses: List<Double>, steps: Int): Double","com.albertomiola.equations.nonlinear.NonLinear.efficiency"]},{"name":"fun evaluateDerivativeOn(x: Double): Double","description":"com.albertomiola.equations.nonlinear.NonLinear.evaluateDerivativeOn","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/evaluate-derivative-on.html","searchKeys":["evaluateDerivativeOn","fun evaluateDerivativeOn(x: Double): Double","com.albertomiola.equations.nonlinear.NonLinear.evaluateDerivativeOn"]},{"name":"fun evaluateOn(x: Complex): Complex","description":"com.albertomiola.equations.polynomial.PolynomialEquation.evaluateOn","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/evaluate-on.html","searchKeys":["evaluateOn","fun evaluateOn(x: Complex): Complex","com.albertomiola.equations.polynomial.PolynomialEquation.evaluateOn"]},{"name":"fun evaluateOn(x: Double): Double","description":"com.albertomiola.equations.nonlinear.NonLinear.evaluateOn","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/evaluate-on.html","searchKeys":["evaluateOn","fun evaluateOn(x: Double): Double","com.albertomiola.equations.nonlinear.NonLinear.evaluateOn"]},{"name":"fun evaluateOn(x: Int): Complex","description":"com.albertomiola.equations.polynomial.PolynomialEquation.evaluateOn","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/evaluate-on.html","searchKeys":["evaluateOn","fun evaluateOn(x: Int): Complex","com.albertomiola.equations.polynomial.PolynomialEquation.evaluateOn"]},{"name":"fun i(): Complex","description":"com.albertomiola.equations.utils.complex.Complex.Factory.i","location":"equations/com.albertomiola.equations.utils.complex/-complex/-factory/i.html","searchKeys":["i","fun i(): Complex","com.albertomiola.equations.utils.complex.Complex.Factory.i"]},{"name":"fun inverse(): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.inverse","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/inverse.html","searchKeys":["inverse","fun inverse(): Fraction","com.albertomiola.equations.utils.fraction.Fraction.inverse"]},{"name":"fun matrixDeterminant(): Complex","description":"com.albertomiola.equations.polynomial.utils.SylvesterMatrix.matrixDeterminant","location":"equations/com.albertomiola.equations.polynomial.utils/-sylvester-matrix/matrix-determinant.html","searchKeys":["matrixDeterminant","fun matrixDeterminant(): Complex","com.albertomiola.equations.polynomial.utils.SylvesterMatrix.matrixDeterminant"]},{"name":"fun negate(): Complex","description":"com.albertomiola.equations.utils.complex.Complex.negate","location":"equations/com.albertomiola.equations.utils.complex/-complex/negate.html","searchKeys":["negate","fun negate(): Complex","com.albertomiola.equations.utils.complex.Complex.negate"]},{"name":"fun nthRoot(nth: Int): Complex","description":"com.albertomiola.equations.utils.complex.Complex.nthRoot","location":"equations/com.albertomiola.equations.utils.complex/-complex/nth-root.html","searchKeys":["nthRoot","fun nthRoot(nth: Int): Complex","com.albertomiola.equations.utils.complex.Complex.nthRoot"]},{"name":"fun phase(): Double","description":"com.albertomiola.equations.utils.complex.Complex.phase","location":"equations/com.albertomiola.equations.utils.complex/-complex/phase.html","searchKeys":["phase","fun phase(): Double","com.albertomiola.equations.utils.complex.Complex.phase"]},{"name":"fun polynomialDiscriminant(): Complex","description":"com.albertomiola.equations.polynomial.utils.SylvesterMatrix.polynomialDiscriminant","location":"equations/com.albertomiola.equations.polynomial.utils/-sylvester-matrix/polynomial-discriminant.html","searchKeys":["polynomialDiscriminant","fun polynomialDiscriminant(): Complex","com.albertomiola.equations.polynomial.utils.SylvesterMatrix.polynomialDiscriminant"]},{"name":"fun pow(value: Double): Complex","description":"com.albertomiola.equations.utils.complex.Complex.pow","location":"equations/com.albertomiola.equations.utils.complex/-complex/pow.html","searchKeys":["pow","fun pow(value: Double): Complex","com.albertomiola.equations.utils.complex.Complex.pow"]},{"name":"fun reciprocal(): Complex","description":"com.albertomiola.equations.utils.complex.Complex.reciprocal","location":"equations/com.albertomiola.equations.utils.complex/-complex/reciprocal.html","searchKeys":["reciprocal","fun reciprocal(): Complex","com.albertomiola.equations.utils.complex.Complex.reciprocal"]},{"name":"fun sqrt(): Complex","description":"com.albertomiola.equations.utils.complex.Complex.sqrt","location":"equations/com.albertomiola.equations.utils.complex/-complex/sqrt.html","searchKeys":["sqrt","fun sqrt(): Complex","com.albertomiola.equations.utils.complex.Complex.sqrt"]},{"name":"fun toPolarCoordinates(): PolarComplex","description":"com.albertomiola.equations.utils.complex.Complex.toPolarCoordinates","location":"equations/com.albertomiola.equations.utils.complex/-complex/to-polar-coordinates.html","searchKeys":["toPolarCoordinates","fun toPolarCoordinates(): PolarComplex","com.albertomiola.equations.utils.complex.Complex.toPolarCoordinates"]},{"name":"fun toStringAsFraction(): String","description":"com.albertomiola.equations.utils.complex.Complex.toStringAsFraction","location":"equations/com.albertomiola.equations.utils.complex/-complex/to-string-as-fraction.html","searchKeys":["toStringAsFraction","fun toStringAsFraction(): String","com.albertomiola.equations.utils.complex.Complex.toStringAsFraction"]},{"name":"fun toStringWithFractions(): String","description":"com.albertomiola.equations.polynomial.PolynomialEquation.toStringWithFractions","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/to-string-with-fractions.html","searchKeys":["toStringWithFractions","fun toStringWithFractions(): String","com.albertomiola.equations.polynomial.PolynomialEquation.toStringWithFractions"]},{"name":"fun tryParse(value: String): Rational?","description":"com.albertomiola.equations.utils.Rational.Parser.tryParse","location":"equations/com.albertomiola.equations.utils/-rational/-parser/try-parse.html","searchKeys":["tryParse","fun tryParse(value: String): Rational?","com.albertomiola.equations.utils.Rational.Parser.tryParse"]},{"name":"object Factory","description":"com.albertomiola.equations.polynomial.PolynomialEquation.Factory","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/-factory/index.html","searchKeys":["Factory","object Factory","com.albertomiola.equations.polynomial.PolynomialEquation.Factory"]},{"name":"object Factory","description":"com.albertomiola.equations.utils.complex.Complex.Factory","location":"equations/com.albertomiola.equations.utils.complex/-complex/-factory/index.html","searchKeys":["Factory","object Factory","com.albertomiola.equations.utils.complex.Complex.Factory"]},{"name":"object Factory","description":"com.albertomiola.equations.utils.fraction.Fraction.Factory","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/-factory/index.html","searchKeys":["Factory","object Factory","com.albertomiola.equations.utils.fraction.Fraction.Factory"]},{"name":"object Parser","description":"com.albertomiola.equations.utils.Rational.Parser","location":"equations/com.albertomiola.equations.utils/-rational/-parser/index.html","searchKeys":["Parser","object Parser","com.albertomiola.equations.utils.Rational.Parser"]},{"name":"open operator override fun compareTo(other: Complex): Int","description":"com.albertomiola.equations.utils.complex.Complex.compareTo","location":"equations/com.albertomiola.equations.utils.complex/-complex/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Complex): Int","com.albertomiola.equations.utils.complex.Complex.compareTo"]},{"name":"open operator override fun compareTo(other: Rational): Int","description":"com.albertomiola.equations.utils.Rational.compareTo","location":"equations/com.albertomiola.equations.utils/-rational/compare-to.html","searchKeys":["compareTo","open operator override fun compareTo(other: Rational): Int","com.albertomiola.equations.utils.Rational.compareTo"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.nonlinear.NonLinear.equals","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.nonlinear.NonLinear.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.nonlinear.types.Bisection.equals","location":"equations/com.albertomiola.equations.nonlinear.types/-bisection/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.nonlinear.types.Bisection.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.nonlinear.types.Brent.equals","location":"equations/com.albertomiola.equations.nonlinear.types/-brent/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.nonlinear.types.Brent.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.nonlinear.types.Chords.equals","location":"equations/com.albertomiola.equations.nonlinear.types/-chords/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.nonlinear.types.Chords.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.nonlinear.types.Newton.equals","location":"equations/com.albertomiola.equations.nonlinear.types/-newton/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.nonlinear.types.Newton.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.nonlinear.types.RegulaFalsi.equals","location":"equations/com.albertomiola.equations.nonlinear.types/-regula-falsi/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.nonlinear.types.RegulaFalsi.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.nonlinear.types.Riddler.equals","location":"equations/com.albertomiola.equations.nonlinear.types/-riddler/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.nonlinear.types.Riddler.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.nonlinear.types.Secant.equals","location":"equations/com.albertomiola.equations.nonlinear.types/-secant/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.nonlinear.types.Secant.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.polynomial.PolynomialEquation.equals","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.polynomial.PolynomialEquation.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.polynomial.types.DurandKerner.equals","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.polynomial.types.DurandKerner.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.utils.complex.Complex.equals","location":"equations/com.albertomiola.equations.utils.complex/-complex/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.utils.complex.Complex.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.albertomiola.equations.utils.fraction.Fraction.equals","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.albertomiola.equations.utils.fraction.Fraction.equals"]},{"name":"open override fun derivative(): Constant","description":"com.albertomiola.equations.polynomial.types.Constant.derivative","location":"equations/com.albertomiola.equations.polynomial.types/-constant/derivative.html","searchKeys":["derivative","open override fun derivative(): Constant","com.albertomiola.equations.polynomial.types.Constant.derivative"]},{"name":"open override fun derivative(): Constant","description":"com.albertomiola.equations.polynomial.types.Linear.derivative","location":"equations/com.albertomiola.equations.polynomial.types/-linear/derivative.html","searchKeys":["derivative","open override fun derivative(): Constant","com.albertomiola.equations.polynomial.types.Linear.derivative"]},{"name":"open override fun derivative(): Cubic","description":"com.albertomiola.equations.polynomial.types.Quartic.derivative","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/derivative.html","searchKeys":["derivative","open override fun derivative(): Cubic","com.albertomiola.equations.polynomial.types.Quartic.derivative"]},{"name":"open override fun derivative(): Linear","description":"com.albertomiola.equations.polynomial.types.Quadratic.derivative","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/derivative.html","searchKeys":["derivative","open override fun derivative(): Linear","com.albertomiola.equations.polynomial.types.Quadratic.derivative"]},{"name":"open override fun derivative(): PolynomialEquation","description":"com.albertomiola.equations.polynomial.types.DurandKerner.derivative","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/derivative.html","searchKeys":["derivative","open override fun derivative(): PolynomialEquation","com.albertomiola.equations.polynomial.types.DurandKerner.derivative"]},{"name":"open override fun derivative(): Quadratic","description":"com.albertomiola.equations.polynomial.types.Cubic.derivative","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/derivative.html","searchKeys":["derivative","open override fun derivative(): Quadratic","com.albertomiola.equations.polynomial.types.Cubic.derivative"]},{"name":"open override fun discriminant(): Complex","description":"com.albertomiola.equations.polynomial.types.Constant.discriminant","location":"equations/com.albertomiola.equations.polynomial.types/-constant/discriminant.html","searchKeys":["discriminant","open override fun discriminant(): Complex","com.albertomiola.equations.polynomial.types.Constant.discriminant"]},{"name":"open override fun discriminant(): Complex","description":"com.albertomiola.equations.polynomial.types.Cubic.discriminant","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/discriminant.html","searchKeys":["discriminant","open override fun discriminant(): Complex","com.albertomiola.equations.polynomial.types.Cubic.discriminant"]},{"name":"open override fun discriminant(): Complex","description":"com.albertomiola.equations.polynomial.types.DurandKerner.discriminant","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/discriminant.html","searchKeys":["discriminant","open override fun discriminant(): Complex","com.albertomiola.equations.polynomial.types.DurandKerner.discriminant"]},{"name":"open override fun discriminant(): Complex","description":"com.albertomiola.equations.polynomial.types.Linear.discriminant","location":"equations/com.albertomiola.equations.polynomial.types/-linear/discriminant.html","searchKeys":["discriminant","open override fun discriminant(): Complex","com.albertomiola.equations.polynomial.types.Linear.discriminant"]},{"name":"open override fun discriminant(): Complex","description":"com.albertomiola.equations.polynomial.types.Quadratic.discriminant","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/discriminant.html","searchKeys":["discriminant","open override fun discriminant(): Complex","com.albertomiola.equations.polynomial.types.Quadratic.discriminant"]},{"name":"open override fun discriminant(): Complex","description":"com.albertomiola.equations.polynomial.types.Quartic.discriminant","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/discriminant.html","searchKeys":["discriminant","open override fun discriminant(): Complex","com.albertomiola.equations.polynomial.types.Quartic.discriminant"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.nonlinear.NonLinear.hashCode","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.nonlinear.NonLinear.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.nonlinear.types.Bisection.hashCode","location":"equations/com.albertomiola.equations.nonlinear.types/-bisection/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.nonlinear.types.Bisection.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.nonlinear.types.Brent.hashCode","location":"equations/com.albertomiola.equations.nonlinear.types/-brent/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.nonlinear.types.Brent.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.nonlinear.types.Chords.hashCode","location":"equations/com.albertomiola.equations.nonlinear.types/-chords/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.nonlinear.types.Chords.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.nonlinear.types.Newton.hashCode","location":"equations/com.albertomiola.equations.nonlinear.types/-newton/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.nonlinear.types.Newton.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.nonlinear.types.RegulaFalsi.hashCode","location":"equations/com.albertomiola.equations.nonlinear.types/-regula-falsi/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.nonlinear.types.RegulaFalsi.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.nonlinear.types.Riddler.hashCode","location":"equations/com.albertomiola.equations.nonlinear.types/-riddler/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.nonlinear.types.Riddler.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.nonlinear.types.Secant.hashCode","location":"equations/com.albertomiola.equations.nonlinear.types/-secant/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.nonlinear.types.Secant.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.polynomial.PolynomialEquation.hashCode","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.polynomial.PolynomialEquation.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.polynomial.types.DurandKerner.hashCode","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.polynomial.types.DurandKerner.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.utils.complex.Complex.hashCode","location":"equations/com.albertomiola.equations.utils.complex/-complex/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.utils.complex.Complex.hashCode"]},{"name":"open override fun hashCode(): Int","description":"com.albertomiola.equations.utils.fraction.Fraction.hashCode","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.albertomiola.equations.utils.fraction.Fraction.hashCode"]},{"name":"open override fun negate(): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.negate","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/negate.html","searchKeys":["negate","open override fun negate(): Fraction","com.albertomiola.equations.utils.fraction.Fraction.negate"]},{"name":"open override fun reduce(): Rational","description":"com.albertomiola.equations.utils.fraction.Fraction.reduce","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/reduce.html","searchKeys":["reduce","open override fun reduce(): Rational","com.albertomiola.equations.utils.fraction.Fraction.reduce"]},{"name":"open override fun roots(): List<Complex>","description":"com.albertomiola.equations.polynomial.types.Constant.roots","location":"equations/com.albertomiola.equations.polynomial.types/-constant/roots.html","searchKeys":["roots","open override fun roots(): List<Complex>","com.albertomiola.equations.polynomial.types.Constant.roots"]},{"name":"open override fun roots(): List<Complex>","description":"com.albertomiola.equations.polynomial.types.Cubic.roots","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/roots.html","searchKeys":["roots","open override fun roots(): List<Complex>","com.albertomiola.equations.polynomial.types.Cubic.roots"]},{"name":"open override fun roots(): List<Complex>","description":"com.albertomiola.equations.polynomial.types.DurandKerner.roots","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/roots.html","searchKeys":["roots","open override fun roots(): List<Complex>","com.albertomiola.equations.polynomial.types.DurandKerner.roots"]},{"name":"open override fun roots(): List<Complex>","description":"com.albertomiola.equations.polynomial.types.Linear.roots","location":"equations/com.albertomiola.equations.polynomial.types/-linear/roots.html","searchKeys":["roots","open override fun roots(): List<Complex>","com.albertomiola.equations.polynomial.types.Linear.roots"]},{"name":"open override fun roots(): List<Complex>","description":"com.albertomiola.equations.polynomial.types.Quadratic.roots","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/roots.html","searchKeys":["roots","open override fun roots(): List<Complex>","com.albertomiola.equations.polynomial.types.Quadratic.roots"]},{"name":"open override fun roots(): List<Complex>","description":"com.albertomiola.equations.polynomial.types.Quartic.roots","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/roots.html","searchKeys":["roots","open override fun roots(): List<Complex>","com.albertomiola.equations.polynomial.types.Quartic.roots"]},{"name":"open override fun solve(): NonLinearResult","description":"com.albertomiola.equations.nonlinear.types.Bisection.solve","location":"equations/com.albertomiola.equations.nonlinear.types/-bisection/solve.html","searchKeys":["solve","open override fun solve(): NonLinearResult","com.albertomiola.equations.nonlinear.types.Bisection.solve"]},{"name":"open override fun solve(): NonLinearResult","description":"com.albertomiola.equations.nonlinear.types.Brent.solve","location":"equations/com.albertomiola.equations.nonlinear.types/-brent/solve.html","searchKeys":["solve","open override fun solve(): NonLinearResult","com.albertomiola.equations.nonlinear.types.Brent.solve"]},{"name":"open override fun solve(): NonLinearResult","description":"com.albertomiola.equations.nonlinear.types.Chords.solve","location":"equations/com.albertomiola.equations.nonlinear.types/-chords/solve.html","searchKeys":["solve","open override fun solve(): NonLinearResult","com.albertomiola.equations.nonlinear.types.Chords.solve"]},{"name":"open override fun solve(): NonLinearResult","description":"com.albertomiola.equations.nonlinear.types.Newton.solve","location":"equations/com.albertomiola.equations.nonlinear.types/-newton/solve.html","searchKeys":["solve","open override fun solve(): NonLinearResult","com.albertomiola.equations.nonlinear.types.Newton.solve"]},{"name":"open override fun solve(): NonLinearResult","description":"com.albertomiola.equations.nonlinear.types.RegulaFalsi.solve","location":"equations/com.albertomiola.equations.nonlinear.types/-regula-falsi/solve.html","searchKeys":["solve","open override fun solve(): NonLinearResult","com.albertomiola.equations.nonlinear.types.RegulaFalsi.solve"]},{"name":"open override fun solve(): NonLinearResult","description":"com.albertomiola.equations.nonlinear.types.Riddler.solve","location":"equations/com.albertomiola.equations.nonlinear.types/-riddler/solve.html","searchKeys":["solve","open override fun solve(): NonLinearResult","com.albertomiola.equations.nonlinear.types.Riddler.solve"]},{"name":"open override fun solve(): NonLinearResult","description":"com.albertomiola.equations.nonlinear.types.Secant.solve","location":"equations/com.albertomiola.equations.nonlinear.types/-secant/solve.html","searchKeys":["solve","open override fun solve(): NonLinearResult","com.albertomiola.equations.nonlinear.types.Secant.solve"]},{"name":"open override fun toDouble(): Double","description":"com.albertomiola.equations.utils.fraction.Fraction.toDouble","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/to-double.html","searchKeys":["toDouble","open override fun toDouble(): Double","com.albertomiola.equations.utils.fraction.Fraction.toDouble"]},{"name":"open override fun toString(): String","description":"com.albertomiola.equations.nonlinear.NonLinear.toString","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/to-string.html","searchKeys":["toString","open override fun toString(): String","com.albertomiola.equations.nonlinear.NonLinear.toString"]},{"name":"open override fun toString(): String","description":"com.albertomiola.equations.polynomial.PolynomialEquation.toString","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/to-string.html","searchKeys":["toString","open override fun toString(): String","com.albertomiola.equations.polynomial.PolynomialEquation.toString"]},{"name":"open override fun toString(): String","description":"com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult.toString","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-division-result/to-string.html","searchKeys":["toString","open override fun toString(): String","com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult.toString"]},{"name":"open override fun toString(): String","description":"com.albertomiola.equations.utils.complex.Complex.toString","location":"equations/com.albertomiola.equations.utils.complex/-complex/to-string.html","searchKeys":["toString","open override fun toString(): String","com.albertomiola.equations.utils.complex.Complex.toString"]},{"name":"open override fun toString(): String","description":"com.albertomiola.equations.utils.fraction.Fraction.toString","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/to-string.html","searchKeys":["toString","open override fun toString(): String","com.albertomiola.equations.utils.fraction.Fraction.toString"]},{"name":"open override val degree: Double","description":"com.albertomiola.equations.polynomial.types.Constant.degree","location":"equations/com.albertomiola.equations.polynomial.types/-constant/degree.html","searchKeys":["degree","open override val degree: Double","com.albertomiola.equations.polynomial.types.Constant.degree"]},{"name":"open override val degree: Double","description":"com.albertomiola.equations.polynomial.types.Cubic.degree","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/degree.html","searchKeys":["degree","open override val degree: Double","com.albertomiola.equations.polynomial.types.Cubic.degree"]},{"name":"open override val degree: Double","description":"com.albertomiola.equations.polynomial.types.DurandKerner.degree","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/degree.html","searchKeys":["degree","open override val degree: Double","com.albertomiola.equations.polynomial.types.DurandKerner.degree"]},{"name":"open override val degree: Double","description":"com.albertomiola.equations.polynomial.types.Linear.degree","location":"equations/com.albertomiola.equations.polynomial.types/-linear/degree.html","searchKeys":["degree","open override val degree: Double","com.albertomiola.equations.polynomial.types.Linear.degree"]},{"name":"open override val degree: Double","description":"com.albertomiola.equations.polynomial.types.Quadratic.degree","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/degree.html","searchKeys":["degree","open override val degree: Double","com.albertomiola.equations.polynomial.types.Quadratic.degree"]},{"name":"open override val degree: Double","description":"com.albertomiola.equations.polynomial.types.Quartic.degree","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/degree.html","searchKeys":["degree","open override val degree: Double","com.albertomiola.equations.polynomial.types.Quartic.degree"]},{"name":"open override val denominator: Int","description":"com.albertomiola.equations.utils.fraction.Fraction.denominator","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/denominator.html","searchKeys":["denominator","open override val denominator: Int","com.albertomiola.equations.utils.fraction.Fraction.denominator"]},{"name":"open override val isNegative: Boolean","description":"com.albertomiola.equations.utils.fraction.Fraction.isNegative","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/is-negative.html","searchKeys":["isNegative","open override val isNegative: Boolean","com.albertomiola.equations.utils.fraction.Fraction.isNegative"]},{"name":"open override val isWhole: Boolean","description":"com.albertomiola.equations.utils.fraction.Fraction.isWhole","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/is-whole.html","searchKeys":["isWhole","open override val isWhole: Boolean","com.albertomiola.equations.utils.fraction.Fraction.isWhole"]},{"name":"open override val numerator: Int","description":"com.albertomiola.equations.utils.fraction.Fraction.numerator","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/numerator.html","searchKeys":["numerator","open override val numerator: Int","com.albertomiola.equations.utils.fraction.Fraction.numerator"]},{"name":"operator fun component1(): Double","description":"com.albertomiola.equations.utils.complex.Complex.component1","location":"equations/com.albertomiola.equations.utils.complex/-complex/component1.html","searchKeys":["component1","operator fun component1(): Double","com.albertomiola.equations.utils.complex.Complex.component1"]},{"name":"operator fun component1(): Int","description":"com.albertomiola.equations.utils.fraction.Fraction.component1","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/component1.html","searchKeys":["component1","operator fun component1(): Int","com.albertomiola.equations.utils.fraction.Fraction.component1"]},{"name":"operator fun component2(): Double","description":"com.albertomiola.equations.utils.complex.Complex.component2","location":"equations/com.albertomiola.equations.utils.complex/-complex/component2.html","searchKeys":["component2","operator fun component2(): Double","com.albertomiola.equations.utils.complex.Complex.component2"]},{"name":"operator fun component2(): Int","description":"com.albertomiola.equations.utils.fraction.Fraction.component2","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/component2.html","searchKeys":["component2","operator fun component2(): Int","com.albertomiola.equations.utils.fraction.Fraction.component2"]},{"name":"operator fun dec(): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.dec","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/dec.html","searchKeys":["dec","operator fun dec(): Fraction","com.albertomiola.equations.utils.fraction.Fraction.dec"]},{"name":"operator fun div(other: Complex): Complex","description":"com.albertomiola.equations.utils.complex.Complex.div","location":"equations/com.albertomiola.equations.utils.complex/-complex/div.html","searchKeys":["div","operator fun div(other: Complex): Complex","com.albertomiola.equations.utils.complex.Complex.div"]},{"name":"operator fun div(other: Fraction): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.div","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/div.html","searchKeys":["div","operator fun div(other: Fraction): Fraction","com.albertomiola.equations.utils.fraction.Fraction.div"]},{"name":"operator fun div(other: PolynomialEquation): PolynomialDivisionResult","description":"com.albertomiola.equations.polynomial.PolynomialEquation.div","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/div.html","searchKeys":["div","operator fun div(other: PolynomialEquation): PolynomialDivisionResult","com.albertomiola.equations.polynomial.PolynomialEquation.div"]},{"name":"operator fun inc(): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.inc","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/inc.html","searchKeys":["inc","operator fun inc(): Fraction","com.albertomiola.equations.utils.fraction.Fraction.inc"]},{"name":"operator fun minus(other: Complex): Complex","description":"com.albertomiola.equations.utils.complex.Complex.minus","location":"equations/com.albertomiola.equations.utils.complex/-complex/minus.html","searchKeys":["minus","operator fun minus(other: Complex): Complex","com.albertomiola.equations.utils.complex.Complex.minus"]},{"name":"operator fun minus(other: Fraction): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.minus","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/minus.html","searchKeys":["minus","operator fun minus(other: Fraction): Fraction","com.albertomiola.equations.utils.fraction.Fraction.minus"]},{"name":"operator fun minus(other: PolynomialEquation): PolynomialEquation","description":"com.albertomiola.equations.polynomial.PolynomialEquation.minus","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/minus.html","searchKeys":["minus","operator fun minus(other: PolynomialEquation): PolynomialEquation","com.albertomiola.equations.polynomial.PolynomialEquation.minus"]},{"name":"operator fun plus(other: Complex): Complex","description":"com.albertomiola.equations.utils.complex.Complex.plus","location":"equations/com.albertomiola.equations.utils.complex/-complex/plus.html","searchKeys":["plus","operator fun plus(other: Complex): Complex","com.albertomiola.equations.utils.complex.Complex.plus"]},{"name":"operator fun plus(other: Fraction): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.plus","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/plus.html","searchKeys":["plus","operator fun plus(other: Fraction): Fraction","com.albertomiola.equations.utils.fraction.Fraction.plus"]},{"name":"operator fun plus(other: PolynomialEquation): PolynomialEquation","description":"com.albertomiola.equations.polynomial.PolynomialEquation.plus","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/plus.html","searchKeys":["plus","operator fun plus(other: PolynomialEquation): PolynomialEquation","com.albertomiola.equations.polynomial.PolynomialEquation.plus"]},{"name":"operator fun times(other: Complex): Complex","description":"com.albertomiola.equations.utils.complex.Complex.times","location":"equations/com.albertomiola.equations.utils.complex/-complex/times.html","searchKeys":["times","operator fun times(other: Complex): Complex","com.albertomiola.equations.utils.complex.Complex.times"]},{"name":"operator fun times(other: Fraction): Fraction","description":"com.albertomiola.equations.utils.fraction.Fraction.times","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/times.html","searchKeys":["times","operator fun times(other: Fraction): Fraction","com.albertomiola.equations.utils.fraction.Fraction.times"]},{"name":"operator fun times(other: PolynomialEquation): PolynomialEquation","description":"com.albertomiola.equations.polynomial.PolynomialEquation.times","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/times.html","searchKeys":["times","operator fun times(other: PolynomialEquation): PolynomialEquation","com.albertomiola.equations.polynomial.PolynomialEquation.times"]},{"name":"operator fun unaryMinus(): Complex","description":"com.albertomiola.equations.utils.complex.Complex.unaryMinus","location":"equations/com.albertomiola.equations.utils.complex/-complex/unary-minus.html","searchKeys":["unaryMinus","operator fun unaryMinus(): Complex","com.albertomiola.equations.utils.complex.Complex.unaryMinus"]},{"name":"val String.isFraction: Boolean","description":"com.albertomiola.equations.utils.fraction.isFraction","location":"equations/com.albertomiola.equations.utils.fraction/is-fraction.html","searchKeys":["isFraction","val String.isFraction: Boolean","com.albertomiola.equations.utils.fraction.isFraction"]},{"name":"val a: Complex","description":"com.albertomiola.equations.polynomial.types.Constant.a","location":"equations/com.albertomiola.equations.polynomial.types/-constant/a.html","searchKeys":["a","val a: Complex","com.albertomiola.equations.polynomial.types.Constant.a"]},{"name":"val a: Complex","description":"com.albertomiola.equations.polynomial.types.Cubic.a","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/a.html","searchKeys":["a","val a: Complex","com.albertomiola.equations.polynomial.types.Cubic.a"]},{"name":"val a: Complex","description":"com.albertomiola.equations.polynomial.types.Linear.a","location":"equations/com.albertomiola.equations.polynomial.types/-linear/a.html","searchKeys":["a","val a: Complex","com.albertomiola.equations.polynomial.types.Linear.a"]},{"name":"val a: Complex","description":"com.albertomiola.equations.polynomial.types.Quadratic.a","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/a.html","searchKeys":["a","val a: Complex","com.albertomiola.equations.polynomial.types.Quadratic.a"]},{"name":"val a: Complex","description":"com.albertomiola.equations.polynomial.types.Quartic.a","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/a.html","searchKeys":["a","val a: Complex","com.albertomiola.equations.polynomial.types.Quartic.a"]},{"name":"val a: Double","description":"com.albertomiola.equations.nonlinear.types.Bisection.a","location":"equations/com.albertomiola.equations.nonlinear.types/-bisection/a.html","searchKeys":["a","val a: Double","com.albertomiola.equations.nonlinear.types.Bisection.a"]},{"name":"val a: Double","description":"com.albertomiola.equations.nonlinear.types.Brent.a","location":"equations/com.albertomiola.equations.nonlinear.types/-brent/a.html","searchKeys":["a","val a: Double","com.albertomiola.equations.nonlinear.types.Brent.a"]},{"name":"val a: Double","description":"com.albertomiola.equations.nonlinear.types.Chords.a","location":"equations/com.albertomiola.equations.nonlinear.types/-chords/a.html","searchKeys":["a","val a: Double","com.albertomiola.equations.nonlinear.types.Chords.a"]},{"name":"val a: Double","description":"com.albertomiola.equations.nonlinear.types.RegulaFalsi.a","location":"equations/com.albertomiola.equations.nonlinear.types/-regula-falsi/a.html","searchKeys":["a","val a: Double","com.albertomiola.equations.nonlinear.types.RegulaFalsi.a"]},{"name":"val a: Double","description":"com.albertomiola.equations.nonlinear.types.Riddler.a","location":"equations/com.albertomiola.equations.nonlinear.types/-riddler/a.html","searchKeys":["a","val a: Double","com.albertomiola.equations.nonlinear.types.Riddler.a"]},{"name":"val a: Double","description":"com.albertomiola.equations.nonlinear.types.Secant.a","location":"equations/com.albertomiola.equations.nonlinear.types/-secant/a.html","searchKeys":["a","val a: Double","com.albertomiola.equations.nonlinear.types.Secant.a"]},{"name":"val b: Complex","description":"com.albertomiola.equations.polynomial.types.Cubic.b","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/b.html","searchKeys":["b","val b: Complex","com.albertomiola.equations.polynomial.types.Cubic.b"]},{"name":"val b: Complex","description":"com.albertomiola.equations.polynomial.types.Linear.b","location":"equations/com.albertomiola.equations.polynomial.types/-linear/b.html","searchKeys":["b","val b: Complex","com.albertomiola.equations.polynomial.types.Linear.b"]},{"name":"val b: Complex","description":"com.albertomiola.equations.polynomial.types.Quadratic.b","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/b.html","searchKeys":["b","val b: Complex","com.albertomiola.equations.polynomial.types.Quadratic.b"]},{"name":"val b: Complex","description":"com.albertomiola.equations.polynomial.types.Quartic.b","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/b.html","searchKeys":["b","val b: Complex","com.albertomiola.equations.polynomial.types.Quartic.b"]},{"name":"val b: Double","description":"com.albertomiola.equations.nonlinear.types.Bisection.b","location":"equations/com.albertomiola.equations.nonlinear.types/-bisection/b.html","searchKeys":["b","val b: Double","com.albertomiola.equations.nonlinear.types.Bisection.b"]},{"name":"val b: Double","description":"com.albertomiola.equations.nonlinear.types.Brent.b","location":"equations/com.albertomiola.equations.nonlinear.types/-brent/b.html","searchKeys":["b","val b: Double","com.albertomiola.equations.nonlinear.types.Brent.b"]},{"name":"val b: Double","description":"com.albertomiola.equations.nonlinear.types.Chords.b","location":"equations/com.albertomiola.equations.nonlinear.types/-chords/b.html","searchKeys":["b","val b: Double","com.albertomiola.equations.nonlinear.types.Chords.b"]},{"name":"val b: Double","description":"com.albertomiola.equations.nonlinear.types.RegulaFalsi.b","location":"equations/com.albertomiola.equations.nonlinear.types/-regula-falsi/b.html","searchKeys":["b","val b: Double","com.albertomiola.equations.nonlinear.types.RegulaFalsi.b"]},{"name":"val b: Double","description":"com.albertomiola.equations.nonlinear.types.Riddler.b","location":"equations/com.albertomiola.equations.nonlinear.types/-riddler/b.html","searchKeys":["b","val b: Double","com.albertomiola.equations.nonlinear.types.Riddler.b"]},{"name":"val b: Double","description":"com.albertomiola.equations.nonlinear.types.Secant.b","location":"equations/com.albertomiola.equations.nonlinear.types/-secant/b.html","searchKeys":["b","val b: Double","com.albertomiola.equations.nonlinear.types.Secant.b"]},{"name":"val c: Complex","description":"com.albertomiola.equations.polynomial.types.Cubic.c","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/c.html","searchKeys":["c","val c: Complex","com.albertomiola.equations.polynomial.types.Cubic.c"]},{"name":"val c: Complex","description":"com.albertomiola.equations.polynomial.types.Quadratic.c","location":"equations/com.albertomiola.equations.polynomial.types/-quadratic/c.html","searchKeys":["c","val c: Complex","com.albertomiola.equations.polynomial.types.Quadratic.c"]},{"name":"val c: Complex","description":"com.albertomiola.equations.polynomial.types.Quartic.c","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/c.html","searchKeys":["c","val c: Complex","com.albertomiola.equations.polynomial.types.Quartic.c"]},{"name":"val coefficients: List<Complex>","description":"com.albertomiola.equations.polynomial.PolynomialEquation.coefficients","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/coefficients.html","searchKeys":["coefficients","val coefficients: List<Complex>","com.albertomiola.equations.polynomial.PolynomialEquation.coefficients"]},{"name":"val convergence: Double","description":"com.albertomiola.equations.nonlinear.utils.NonLinearResult.convergence","location":"equations/com.albertomiola.equations.nonlinear.utils/-non-linear-result/convergence.html","searchKeys":["convergence","val convergence: Double","com.albertomiola.equations.nonlinear.utils.NonLinearResult.convergence"]},{"name":"val d: Complex","description":"com.albertomiola.equations.polynomial.types.Cubic.d","location":"equations/com.albertomiola.equations.polynomial.types/-cubic/d.html","searchKeys":["d","val d: Complex","com.albertomiola.equations.polynomial.types.Cubic.d"]},{"name":"val d: Complex","description":"com.albertomiola.equations.polynomial.types.Quartic.d","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/d.html","searchKeys":["d","val d: Complex","com.albertomiola.equations.polynomial.types.Quartic.d"]},{"name":"val e: Complex","description":"com.albertomiola.equations.polynomial.types.Quartic.e","location":"equations/com.albertomiola.equations.polynomial.types/-quartic/e.html","searchKeys":["e","val e: Complex","com.albertomiola.equations.polynomial.types.Quartic.e"]},{"name":"val efficiency: Double","description":"com.albertomiola.equations.nonlinear.utils.NonLinearResult.efficiency","location":"equations/com.albertomiola.equations.nonlinear.utils/-non-linear-result/efficiency.html","searchKeys":["efficiency","val efficiency: Double","com.albertomiola.equations.nonlinear.utils.NonLinearResult.efficiency"]},{"name":"val function: String","description":"com.albertomiola.equations.nonlinear.NonLinear.function","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/function.html","searchKeys":["function","val function: String","com.albertomiola.equations.nonlinear.NonLinear.function"]},{"name":"val guesses: List<Double>","description":"com.albertomiola.equations.nonlinear.utils.NonLinearResult.guesses","location":"equations/com.albertomiola.equations.nonlinear.utils/-non-linear-result/guesses.html","searchKeys":["guesses","val guesses: List<Double>","com.albertomiola.equations.nonlinear.utils.NonLinearResult.guesses"]},{"name":"val imaginary: Double","description":"com.albertomiola.equations.utils.complex.Complex.imaginary","location":"equations/com.albertomiola.equations.utils.complex/-complex/imaginary.html","searchKeys":["imaginary","val imaginary: Double","com.albertomiola.equations.utils.complex.Complex.imaginary"]},{"name":"val initialGuess: List<Complex>","description":"com.albertomiola.equations.polynomial.types.DurandKerner.initialGuess","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/initial-guess.html","searchKeys":["initialGuess","val initialGuess: List<Complex>","com.albertomiola.equations.polynomial.types.DurandKerner.initialGuess"]},{"name":"val isImproper: Boolean","description":"com.albertomiola.equations.utils.fraction.Fraction.isImproper","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/is-improper.html","searchKeys":["isImproper","val isImproper: Boolean","com.albertomiola.equations.utils.fraction.Fraction.isImproper"]},{"name":"val isProper: Boolean","description":"com.albertomiola.equations.utils.fraction.Fraction.isProper","location":"equations/com.albertomiola.equations.utils.fraction/-fraction/is-proper.html","searchKeys":["isProper","val isProper: Boolean","com.albertomiola.equations.utils.fraction.Fraction.isProper"]},{"name":"val isRealEquation: Boolean","description":"com.albertomiola.equations.polynomial.PolynomialEquation.isRealEquation","location":"equations/com.albertomiola.equations.polynomial/-polynomial-equation/is-real-equation.html","searchKeys":["isRealEquation","val isRealEquation: Boolean","com.albertomiola.equations.polynomial.PolynomialEquation.isRealEquation"]},{"name":"val isZero: Boolean","description":"com.albertomiola.equations.utils.complex.Complex.isZero","location":"equations/com.albertomiola.equations.utils.complex/-complex/is-zero.html","searchKeys":["isZero","val isZero: Boolean","com.albertomiola.equations.utils.complex.Complex.isZero"]},{"name":"val maxSteps: Int = 20","description":"com.albertomiola.equations.nonlinear.NonLinear.maxSteps","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/max-steps.html","searchKeys":["maxSteps","val maxSteps: Int = 20","com.albertomiola.equations.nonlinear.NonLinear.maxSteps"]},{"name":"val maxSteps: Int = 30","description":"com.albertomiola.equations.polynomial.types.DurandKerner.maxSteps","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/max-steps.html","searchKeys":["maxSteps","val maxSteps: Int = 30","com.albertomiola.equations.polynomial.types.DurandKerner.maxSteps"]},{"name":"val phiDegrees: Double","description":"com.albertomiola.equations.utils.complex.PolarComplex.phiDegrees","location":"equations/com.albertomiola.equations.utils.complex/-polar-complex/phi-degrees.html","searchKeys":["phiDegrees","val phiDegrees: Double","com.albertomiola.equations.utils.complex.PolarComplex.phiDegrees"]},{"name":"val phiRadians: Double","description":"com.albertomiola.equations.utils.complex.PolarComplex.phiRadians","location":"equations/com.albertomiola.equations.utils.complex/-polar-complex/phi-radians.html","searchKeys":["phiRadians","val phiRadians: Double","com.albertomiola.equations.utils.complex.PolarComplex.phiRadians"]},{"name":"val polyDenominator: PolynomialEquation","description":"com.albertomiola.equations.polynomial.utils.PolynomialLongDivision.polyDenominator","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-long-division/poly-denominator.html","searchKeys":["polyDenominator","val polyDenominator: PolynomialEquation","com.albertomiola.equations.polynomial.utils.PolynomialLongDivision.polyDenominator"]},{"name":"val polynomial: PolynomialEquation","description":"com.albertomiola.equations.polynomial.utils.SylvesterMatrix.polynomial","location":"equations/com.albertomiola.equations.polynomial.utils/-sylvester-matrix/polynomial.html","searchKeys":["polynomial","val polynomial: PolynomialEquation","com.albertomiola.equations.polynomial.utils.SylvesterMatrix.polynomial"]},{"name":"val precision: Double = 1.0E-10","description":"com.albertomiola.equations.polynomial.types.DurandKerner.precision","location":"equations/com.albertomiola.equations.polynomial.types/-durand-kerner/precision.html","searchKeys":["precision","val precision: Double = 1.0E-10","com.albertomiola.equations.polynomial.types.DurandKerner.precision"]},{"name":"val r: Double","description":"com.albertomiola.equations.utils.complex.PolarComplex.r","location":"equations/com.albertomiola.equations.utils.complex/-polar-complex/r.html","searchKeys":["r","val r: Double","com.albertomiola.equations.utils.complex.PolarComplex.r"]},{"name":"val real: Double","description":"com.albertomiola.equations.utils.complex.Complex.real","location":"equations/com.albertomiola.equations.utils.complex/-complex/real.html","searchKeys":["real","val real: Double","com.albertomiola.equations.utils.complex.Complex.real"]},{"name":"val remainder: PolynomialEquation","description":"com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult.remainder","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-division-result/remainder.html","searchKeys":["remainder","val remainder: PolynomialEquation","com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult.remainder"]},{"name":"val tolerance: Double = 1.0E-15","description":"com.albertomiola.equations.nonlinear.NonLinear.tolerance","location":"equations/com.albertomiola.equations.nonlinear/-non-linear/tolerance.html","searchKeys":["tolerance","val tolerance: Double = 1.0E-15","com.albertomiola.equations.nonlinear.NonLinear.tolerance"]},{"name":"val x0: Double","description":"com.albertomiola.equations.nonlinear.types.Newton.x0","location":"equations/com.albertomiola.equations.nonlinear.types/-newton/x0.html","searchKeys":["x0","val x0: Double","com.albertomiola.equations.nonlinear.types.Newton.x0"]},{"name":"var polyNumerator: PolynomialEquation","description":"com.albertomiola.equations.polynomial.utils.PolynomialLongDivision.polyNumerator","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-long-division/poly-numerator.html","searchKeys":["polyNumerator","var polyNumerator: PolynomialEquation","com.albertomiola.equations.polynomial.utils.PolynomialLongDivision.polyNumerator"]},{"name":"var quotient: PolynomialEquation","description":"com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult.quotient","location":"equations/com.albertomiola.equations.polynomial.utils/-polynomial-division-result/quotient.html","searchKeys":["quotient","var quotient: PolynomialEquation","com.albertomiola.equations.polynomial.utils.PolynomialDivisionResult.quotient"]}]
